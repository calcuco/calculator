// Code generated by go-swagger; DO NOT EDIT.

package report

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/daxsorbito/go-calculator/models"
)

// FindReportsOKCode is the HTTP code returned for type FindReportsOK
const FindReportsOKCode int = 200

/*FindReportsOK list all events

swagger:response findReportsOK
*/
type FindReportsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Report `json:"body,omitempty"`
}

// NewFindReportsOK creates FindReportsOK with default headers values
func NewFindReportsOK() *FindReportsOK {

	return &FindReportsOK{}
}

// WithPayload adds the payload to the find reports o k response
func (o *FindReportsOK) WithPayload(payload []*models.Report) *FindReportsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find reports o k response
func (o *FindReportsOK) SetPayload(payload []*models.Report) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindReportsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Report, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*FindReportsDefault generic error

swagger:response findReportsDefault
*/
type FindReportsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewFindReportsDefault creates FindReportsDefault with default headers values
func NewFindReportsDefault(code int) *FindReportsDefault {
	if code <= 0 {
		code = 500
	}

	return &FindReportsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the find reports default response
func (o *FindReportsDefault) WithStatusCode(code int) *FindReportsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the find reports default response
func (o *FindReportsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the find reports default response
func (o *FindReportsDefault) WithPayload(payload *models.Error) *FindReportsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find reports default response
func (o *FindReportsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindReportsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
